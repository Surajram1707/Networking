#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<string.h>
void error(char *msg)
{
    perror(msg);
    exit(1);
}
int main(int argc,char *argv[])
{
    int s,news,pno,cli,n,count=1,i=1;
    char buffer[256],msg[256];
    struct sockaddr_in serv_addr,cli_addr;
    if(argc<2)
    {
        fprintf(stderr,"ERROR,no port provided\n");
        exit(1);
    }
    s=socket(AF_INET,SOCK_STREAM,0);
    if(s<0)
    {
        error("ERROR opening socket");
    }
    bzero((char *)&serv_addr,sizeof(serv_addr));
    pno=atoi(argv[1]);
    serv_addr.sin_family=AF_INET;
    serv_addr.sin_addr.s_addr=INADDR_ANY;
    serv_addr.sin_port=htons(pno);
    if(bind(s,(struct sockaddr *)&serv_addr,sizeof(serv_addr))<0)
    {
        error("ERROR in binding");
    }
    listen(s,5);
    cli=sizeof(cli_addr);
    news=accept(s,(struct sockaddr *)&cli_addr,&cli);
    if(news<0)
    {
        error("ERROR on accept");
    }
    do
    {
     if(i<=2)
    {
      printf("---->Data %d sending----->\n",i);
     sleep(3);
     // printf("-----<Ack %d receivied----<\n",i);
     //sleep(3);
     bzero(buffer,256);
     n=read(news,buffer,255);
     printf("%s\n",buffer);
   // write(news,strcat("Ack",(char *)&count),4);
   // count++;
   sleep(3);
   }
    else
    {
     printf("------<Ack %d again received-----<\n",i-1);
     sleep(3);
    }
    i++;
    }while(i<=3);

      
  //  bzero(buffer,256);
  //  n=read(news,buffer,255);
   // if(n<0)
  //  {
   //     error("ERROR reading from socket");
   // }
   // printf("Received message: %s\n",buffer);
  // write(news,strcat("ack",(char *)&count),4);
   // count++;
    //if(n<0)
   // {
   //     error("ERROR writing to socket");
   // }

return 0;
}
