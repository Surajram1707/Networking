#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<string.h>
void error(char *msg)
{
    perror(msg);
    exit(1);
}
int main(int argc,char *argv[])
{
    int s,news,pno,cli,n,net;
    char buffer[256],msg[256];
    socklen_t clilen;
    struct hostent *server;
    struct sockaddr_in serv_addr,cli_addr;
    if(argc<2)
    {
        fprintf(stderr,"ERROR,no port provided\n");
        exit(1);
    }
    s=socket(AF_INET,SOCK_DGRAM,0);
    if(s<0)
    {
        error("ERROR opening socket");
    }
    bzero((char *)&serv_addr,sizeof(serv_addr));
    pno=atoi(argv[1]);
    serv_addr.sin_family=AF_INET;
    serv_addr.sin_addr.s_addr=INADDR_ANY;
    serv_addr.sin_port=htons(pno);
    if(bind(s,(struct sockaddr *)&serv_addr,sizeof(serv_addr))<0)
    {
        error("ERROR in binding");
    }
    listen(s,5);
      // bzero(buffer,256);
    clilen=sizeof(cli_addr);
    n=recvfrom(s,buffer,255,0,(struct sockaddr *)&cli_addr,&clilen);
    if(n<0)
    {
        error("ERROR reading from socket");
    }

   // printf("Message %s\n",buffer);
    printf("Server: ");
    fgets(msg,255,stdin);
   // const void* buf;
   unsigned char buf[sizeof(struct in6_addr)];
    server=gethostbyname("CS-01-105-CO279");
 net=inet_pton(AF_INET,server,msg);
     if(net<0)
        error("ERROR in finding IP address");
      printf("%d",net);
  n=sendto(s,buf,strlen(buf),0,(struct sockaddr *)&cli_addr,sizeof(cli_addr));
    if(n<0)
    {
        error("ERROR writing to socket");
    }
return 0;
}

